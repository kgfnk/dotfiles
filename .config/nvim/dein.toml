#[[plugins]]
#repo = 'Shougo/vimproc.vim'
#build = 'make'

[[plugins]]
repo   = 'Shougo/unite.vim'
depends = 'neomru.vim'

[[plugins]]
repo = 'junegunn/fzf'
build = './install --bin'
merged = '0'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
hook_add = '''
command! FZFMru call fzf#run({
\  'source':  v:oldfiles,
\  'sink':    'e',
\  'options': '-m -x +s',
\  'down':    '40%'})
command! -bang -nargs=* Rg
  \ call fzf#vim#grep(
  \   'rg --line-number --no-heading '.shellescape(<q-args>), 0,
  \   fzf#vim#with_preview({'options': '--exact --reverse --delimiter : --nth 3..'}, 'right:50%:wrap'))
imap <S-Tab> <Plug>(fzf-complete-line)
nnoremap <Leader><Space> :Files<CR>
nnoremap <Leader>b :Buffers<CR>
nnoremap <Leader>x :Commands<CR>
nnoremap <Leader>f :GFiles<CR>
nnoremap <Leader>gr :<C-u>Rg <C-r>=expand('<cword>')<CR><CR>
vnoremap <Leader>gr :<C-u>Rg <C-r>=expand('<cword>')<CR><CR>
nnoremap <Leader>k :bd<CR>
"nnoremap <Leader>r :FZFMru<CR>
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'shumphrey/fugitive-gitlab.vim'
hook_add = '''
let g:fugitive_gitlab_domains = ['https://gitlab.akashic-cloud']
let g:gitlab_api_keys = {'gitlab.akashic-cloud': 'hFx6Pa9NLkwaNoJdHaN1'}
'''

[[plugins]]
repo = 'gregsexton/gitv'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
let g:gitgutter_highlight_lines = 0
let g:gitgutter_sign_added = ''
let g:gitgutter_sign_modified = ''
let g:gitgutter_sign_removed = '✂'
'''
[[plugins]]
repo = 'terryma/vim-expand-region'
hook_add = '''
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)
'''

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-line'

[[plugins]]
repo = 'kana/vim-textobj-entire'

[[plugins]]  #filetypeを変更
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim', 'vim-textobj-user']
hock_add = '''
nmap <Leader>q <Plug>(precious-quickrun-op)
omap ic <Plug>(textobj-precious-i)
vmap ic <Plug>(textobj-precious-i)
'''

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'Shougo/vimfiler.vim'
hook_add = '''
let g:vimfiler_as_default_explorer = 1
let g:vimfiler_enable_auto_cd = 0
let g:vimfiler_tree_leaf_icon = ' '
let g:vimfiler_tree_opened_icon = '▾'
let g:vimfiler_tree_closed_icon = '▸'
let g:vimfiler_file_icon = ' '
let g:vimfiler_readonly_file_icon = '✗'
let g:vimfiler_marked_file_icon = '✓'
'''

[[plugins]]
repo = 'kannokanno/previm'
hook_add = '''
let g:previm_open_cmd = ''
let g:previm_enable_realtime = 1
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = {}
let g:quickrun_config._ = {
\   "split": "vertical",
\   "runner" : "vimproc",
\   "runner/vimproc/updatetime" : 40,
\}
'''

[[plugins]]
repo = 'rcmdnk/vim-markdown'
hook_add = '''
let vim_markdown_preview_github=1
'''

[[plugins]]
repo = 'vim-pandoc/vim-pandoc-after'
hook_add = '''
let g:pandoc#after#modules#enabled = ["nrrwrgn", "ultisnips", "unite.vim", "neosnippet"]
'''

[[plugins]]
repo = 'lifepillar/vim-solarized8'
hook_add = '''
"set background=dark
"au MyAutoCmd VimEnter * nested colorscheme solarized8_dark
'''

[[plugins]]
repo = 'NLKNguyen/papercolor-theme'
hook_add = '''
set background=light
au MyAutoCmd VimEnter * nested colorscheme PaperColor
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
'''

[[plugins]]
repo = 'delphinus/lightline-delphinus'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
"let g:lightline = {
"      \ 'colorscheme': 'PaperColor',
"      \ 'active': {
"      \   'left': [ [ 'mode', 'paste' ],
"      \             [ 'fugitive', 'readonly', 'filename', 'modified' ] ]
"      \ },
"      \ 'component': {
"      \   'readonly': '%{&readonly?"×":""}',
"      \   'modified': '%{&filetype=="help"?"":&modified?"+":&modifiable?"":"-"}',
"      \   'fugitive': '%{exists("*fugitive#head")?fugitive#head():""}'
"      \ },
"      \ }
'''

[[plugins]]   #日付のインクリメント
repo = 'tpope/vim-speeddating'

[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
let g:netrw_nogx = 1 " disable netrw's gx mapping.
nmap gx <Plug>(openbrowser-smart-search)
vmap gx <Plug>(openbrowser-smart-search)
'''

[[plugins]]
repo = 'tpope/vim-surround'
hook_add = '''
nmap <Leader>ss ysiw
nmap <Leader>st ysst
nmap <Leader>sT ySSt
'''

#[[plugins]]
#repo = 'neomake/neomake'
#hook_add = '''
#autocmd! BufWritePost * Neomake
#let g:neomake_open_list = 2
#'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'aklt/plantuml-syntax'

[[plugins]]
repo = 'AndrewRadev/switch.vim'
hook_add= '''
let g:switch_mapping = ""
nnoremap - :Switch<CR>
nnoremap + :SwitchReverse<CR>
let g:switch_custom_definitions = [
\   ['pick', 'reword', 'edit', 'squash', 'fixup', 'exec'],
\   ['-', '+', '=', '*', '/'],
\   ['{', '}', '[', ']', '(', ')', '<', '>'],
\   ['!', '@', '#', '$', '%', '^', '&', '|'],
\   ['foo', 'bar', 'baz'],
\   ['hoge', 'fuga', 'piyo'],
\   ['yes', 'no'],
\   ['on', 'off'],
\   ['And', 'Or'],
\   ['and', 'or'],
\   ['start', 'end'],
\   ['○', '×', '△'],
\   ['①', '②', '③', '④', '⑤', '⑥', '⑦', '⑧', '⑨', '⑩'],
\   ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten'],
\   ['日', '月', '火', '水', '木', '金', '土'],
\   ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'],
\   ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec']
\ ]
'''

[[plugins]]
repo = 'mattn/webapi-vim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)
'''

[[plugins]]
repo = 'kgfnk/vim-csvtrans'

[[plugins]]
repo = 'Chiel92/vim-autoformat'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'lambdalisue/gina.vim'

[[plugins]]
repo = 'jason0x43/vim-js-indent'
hook_add = '''
let g:js_indent_typescript = 1
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

#[[plugins]]
#repo = 'Quramy/tsuquyomi'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'lambdalisue/gina.vim'

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'
hook_add = '''
let g:NERDTreeLimitedSyntax = 1
nnoremap <silent><C-e> :NERDTreeToggle<CR>
"vim-nerdtree-syntax-highlight
let s:rspec_red = 'FE405F'
let s:git_orange = 'F54D27'
let g:NERDTreeExactMatchHighlightColor = {} " this line is needed to avoid error
let g:NERDTreeExactMatchHighlightColor['.gitignore'] = s:git_orange " sets the color for .gitignore files
let g:NERDTreePatternMatchHighlightColor = {} " this line is needed to avoid error
let g:NERDTreePatternMatchHighlightColor['.*_spec\.rb$'] = s:rspec_red " sets the color for files ending with _spec.rb

" vim-devicons
let g:webdevicons_conceal_nerdtree_brackets = 1
let g:WebDevIconsNerdTreeAfterGlyphPadding = ' '

" dir-icons
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
let g:DevIconsEnableFoldersOpenClose = 1
let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = ''
let g:DevIconsDefaultFolderOpenSymbol = ''
" file-icons
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols = {}
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['html'] = ''
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['css'] = ''
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['md'] = ''
let g:WebDevIconsUnicodeDecorateFileNodesExtensionSymbols['txt'] = ''
'''

[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'
hook_add = '''
autocmd BufReadPre *.html let b:javascript_lib_use_angularui = 1
'''

[[plugins]]
repo = 'curist/vim-angular-template'

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
build = 'bash install.sh'
branch = 'next'
hook_add = '''
set hidden

let g:LanguageClient_serverCommands = {
    \ 'html': ['/usr/local/bin/html-languageserver', '--stdio'],
    \ 'css': ['/usr/local/bin/css-languageserver', '--stdio'],
    \ 'typescript': ['/usr/local/bin/javascript-typescript-stdio'],
    \ 'javascript': ['/usr/local/bin/javascript-typescript-stdio']
    \ }
let g:LanguageClient_autoStart = 1
let g:LanguageClient_diagnosticsEnable = 0 " シンタックスチェックOFF
" not stop completion $ & /
setlocal iskeyword+=$
setlocal iskeyword+=-

nnoremap <F5> :call LanguageClient_contextMenu()<CR>
nnoremap <silent> K :call LanguageClient_textDocument_hover()<CR>
nnoremap <silent> gd :call LanguageClient_textDocument_definition()<CR>
nnoremap <silent> <F2> :call LanguageClient_textDocument_rename()<CR>
'''

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
let g:ale_completion_enabled = 1
let g:ale_echo_msg_error_str = nr2char(0xf421) . ' '
let g:ale_echo_msg_warning_str = nr2char(0xf420) . ' '
let g:ale_echo_msg_info_str = nr2char(0xf05a) . ' '
let g:ale_echo_msg_format = '%severity%  %linter% - %s'
let g:ale_sign_column_always = 1
let g:ale_sign_error = g:ale_echo_msg_error_str
let g:ale_sign_warning = g:ale_echo_msg_warning_str
let g:ale_statusline_format = [
      \ g:ale_echo_msg_error_str . ' %d',
      \ g:ale_echo_msg_warning_str . ' %d',
      \ nr2char(0xf4a1) . '  ']
" 保存時に修正
let g:ale_fix_on_save = 0
let g:ale_javascript_prettier_use_local_config = 1
" ファイルオープン時にチェックしない
let g:ale_lint_on_enter = 0

let g:ale_set_loclist = 0
let g:ale_set_quickfix = 1

let g:ale_open_list = 0

" エラーと警告がなくなっても開いたままにする
let g:ale_keep_list_window_open = 0

let g:ale_linters = {
\   'html': ['htmlhint'],
\   'css': ['stylelint'],
\   'javascript': ['eslint'],
\   'typescript': ['tslint -p .'],
\}

let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\   'html': [],
\   'css': ['stylelint'],
\   'javascript': ['eslint'],
\   'typescript': ['tslint']
\}
let g:ale_typescript_tslint_config_path = './tslint.json'
'''
